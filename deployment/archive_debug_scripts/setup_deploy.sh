#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß CloverdashBot Deployment Setup${NC}"
echo ""

# Check if deploy.env already exists
if [ -f "deploy.env" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  deploy.env file already exists${NC}"
    read -p "Do you want to overwrite it? (y/N): " overwrite
    if [[ ! $overwrite =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}Setup cancelled${NC}"
        exit 0
    fi
fi

echo -e "${BLUE}üìù Please provide deployment configuration:${NC}"
echo ""

# Get server details
read -p "Server IP/hostname (default: YOUR_SERVER_IP): " remote_host
remote_host=${remote_host:-YOUR_SERVER_IP}

read -p "SSH username (default: root): " remote_user
remote_user=${remote_user:-root}

read -p "SSH key path (default: ~/.ssh/your_ssh_key, or leave empty for default SSH): " ssh_key_path
ssh_key_path=${ssh_key_path:-~/.ssh/your_ssh_key}

read -p "Deployment directory on server (default: /opt/cloverdash-bot): " deploy_dir
deploy_dir=${deploy_dir:-/opt/cloverdash-bot}

echo ""
echo -e "${BLUE}üéØ Deployment options:${NC}"

# Deployment options
echo "What would you like to deploy?"
echo "1) Both Backend API and Telegram Bot (default)"
echo "2) Only Backend API"
echo "3) Only Telegram Bot"
read -p "Choose option (1-3): " deploy_option

case $deploy_option in
    2)
        deploy_backend=true
        deploy_bot=false
        ;;
    3)
        deploy_backend=false
        deploy_bot=true
        ;;
    *)
        deploy_backend=true
        deploy_bot=true
        ;;
esac

echo ""
echo -e "${BLUE}üìÅ Creating deploy.env file...${NC}"

# Create deploy.env file
cat > deploy.env << EOF
# Deployment Configuration
# Generated by setup_deploy.sh

# Server Configuration
REMOTE_HOST=$remote_host
REMOTE_USER=$remote_user
SSH_KEY_PATH=$ssh_key_path

# Deployment Options
DEPLOY_BACKEND=$deploy_backend
DEPLOY_BOT=$deploy_bot

# Optional: Custom deployment directory on server
REMOTE_DEPLOY_DIR=$deploy_dir

# Optional: Docker Registry (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–µ—Å—Ç—Ä)
# DOCKER_REGISTRY=your-registry.com
# DOCKER_USERNAME=your-username
# DOCKER_PASSWORD=your-password
EOF

echo -e "${GREEN}‚úÖ deploy.env file created successfully!${NC}"
echo ""

# Test SSH connection
echo -e "${BLUE}üîê Testing SSH connection...${NC}"

# Prepare SSH command
ssh_cmd="ssh"
if [ -n "$ssh_key_path" ] && [ "$ssh_key_path" != "" ]; then
    ssh_key_expanded=$(eval echo $ssh_key_path)
    if [ -f "$ssh_key_expanded" ]; then
        ssh_cmd="ssh -i $ssh_key_expanded"
        echo -e "${GREEN}‚úÖ SSH key found: $ssh_key_expanded${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  SSH key not found: $ssh_key_expanded${NC}"
        echo -e "${YELLOW}Will use default SSH configuration${NC}"
        ssh_cmd="ssh"
    fi
else
    echo -e "${YELLOW}Using default SSH configuration (no key specified)${NC}"
fi

# Test connection
if $ssh_cmd -o ConnectTimeout=10 -o BatchMode=yes "$remote_user@$remote_host" 'exit 0' 2>/dev/null; then
    echo -e "${GREEN}‚úÖ SSH connection successful!${NC}"
else
    echo -e "${RED}‚ùå SSH connection failed${NC}"
    echo -e "${YELLOW}Please check:${NC}"
    echo -e "${YELLOW}  - Server accessibility: $remote_host${NC}"
    echo -e "${YELLOW}  - User access: $remote_user${NC}"
    if [ -n "$ssh_key_path" ]; then
        echo -e "${YELLOW}  - SSH key permissions: chmod 600 $ssh_key_path${NC}"
    else
        echo -e "${YELLOW}  - SSH configuration and keys${NC}"
    fi
fi

echo ""
echo -e "${BLUE}üìã Configuration Summary:${NC}"
echo -e "${YELLOW}Server:${NC} $remote_user@$remote_host"
echo -e "${YELLOW}SSH Key:${NC} $ssh_key_path"
echo -e "${YELLOW}Deploy Dir:${NC} $deploy_dir"
echo -e "${YELLOW}Backend:${NC} $([ "$deploy_backend" = true ] && echo "‚úÖ Will deploy" || echo "‚è≠Ô∏è  Skipped")"
echo -e "${YELLOW}Bot:${NC} $([ "$deploy_bot" = true ] && echo "‚úÖ Will deploy" || echo "‚è≠Ô∏è  Skipped")"

echo ""
echo -e "${GREEN}üöÄ Next steps:${NC}"
echo "1. Make sure you have configured backend/.env file"
echo "2. Make sure you have configured telegram-bot/.env file"
echo "3. Run deployment: ./deploy_all.sh"

echo ""
echo -e "${BLUE}Useful commands:${NC}"
echo "  ./deploy_all.sh                # Full deployment"
echo "  ./deploy_all.sh --backend-only # Backend only"
echo "  ./deploy_all.sh --bot-only     # Bot only" 