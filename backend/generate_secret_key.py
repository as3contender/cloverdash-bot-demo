#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
"""

import secrets
import string
import base64
import os


def generate_secret_key(length: int = 32) -> str:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–æ–≥–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞

    Args:
        length: –î–ª–∏–Ω–∞ –∫–ª—é—á–∞ –≤ –±–∞–π—Ç–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 32 –±–∞–π—Ç–∞ = 256 –±–∏—Ç)

    Returns:
        str: –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
    """
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –±–∞–π—Ç—ã
    random_bytes = secrets.token_bytes(length)

    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64 –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    secret_key = base64.urlsafe_b64encode(random_bytes).decode("utf-8")

    return secret_key


def generate_alphanumeric_key(length: int = 64) -> str:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä

    Args:
        length: –î–ª–∏–Ω–∞ –∫–ª—é—á–∞ –≤ —Å–∏–º–≤–æ–ª–∞—Ö

    Returns:
        str: –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä
    """
    alphabet = string.ascii_letters + string.digits
    secret_key = "".join(secrets.choice(alphabet) for _ in range(length))

    return secret_key


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π"""
    print("üîê –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π –¥–ª—è JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 60)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–ª—é—á–µ–π
    print("\n1Ô∏è‚É£ Base64 –∫–ª—é—á (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):")
    base64_key = generate_secret_key(32)
    print(f"SECRET_KEY={base64_key}")

    print("\n2Ô∏è‚É£ –ë–æ–ª–µ–µ –¥–ª–∏–Ω–Ω—ã–π Base64 –∫–ª—é—á (–ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å):")
    long_base64_key = generate_secret_key(64)
    print(f"SECRET_KEY={long_base64_key}")

    print("\n3Ô∏è‚É£ –ê–ª—Ñ–∞–≤–∏—Ç–Ω–æ-—Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–ª—é—á:")
    alphanumeric_key = generate_alphanumeric_key(64)
    print(f"SECRET_KEY={alphanumeric_key}")

    print("\n" + "=" * 60)
    print("üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –∫–ª—é—á–µ–π –≤—ã—à–µ")
    print("2. –î–æ–±–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–∫—É SECRET_KEY=... –≤ –≤–∞—à .env —Ñ–∞–π–ª")
    print("3. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º –∫–ª—é—á–æ–º!")
    print("4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")

    print("\n‚ö†Ô∏è  –í–ê–ñ–ù–û:")
    print("- –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    print("- –°–º–µ–Ω–∞ –∫–ª—é—á–∞ –∞–Ω–Ω—É–ª–∏—Ä—É–µ—Ç –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã")
    print("- –•—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!")


if __name__ == "__main__":
    main()
